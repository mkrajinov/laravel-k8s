# Default values for laravel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image: laravel
imagePullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

database:
  connection: mysql
  host: mariadb-service
  port: 3306
  name: laravel
  username: laravel
  password: password

queueWorker:
  replicaCount: 1

aws:
  accessKey: "acces-key"
  secretKey: "secret-key"

env:
  APP_NAME: Laravel
  APP_ENV: local
  APP_KEY: base64:scHwFv2TLZkl9n5YCFGTNUg/oUCnGCc69uiOUBWZl/U=
  APP_DEBUG: true
  APP_URL: http://127.0.0.1:8080
  LOG_CHANNEL: stack
  LOG_LEVEL: debug

  BROADCAST_DRIVER: log
  CACHE_DRIVER: file
  FILESYSTEM_DISK: local
  QUEUE_CONNECTION: redis
  SESSION_DRIVER: redis
  SESSION_LIFETIME: 120

  MEMCACHED_HOST: memcached

  MAIL_MAILER: ses
  MAIL_HOST: mailhog
  MAIL_PORT: 1025
  MAIL_FROM_ADDRESS: "hello@example.com"
  MAIL_FROM_NAME: "${APP_NAME}"

  AWS_DEFAULT_REGION: ap-southeast-1
  AWS_USE_PATH_STYLE_ENDPOINT: false

  MIX_PUSHER_APP_KEY: "${PUSHER_APP_KEY}"
  MIX_PUSHER_APP_CLUSTER: "${PUSHER_APP_CLUSTER}"

  SCOUT_DRIVER: meilisearch
  MEILISEARCH_HOST: http://meilisearch:7700

nginx:
  image: nginx:1.21-alpine
  imagePullPolicy: Always
  # set the service account to be used, default if left empty
  serviceAccountName: ""
  # mount the service account token
  automountServiceAccountToken: false
  replicas: 1
  revisionHistoryLimit: 10
  # resources:
  #  requests:
  #    memory: 256Mi
  #    cpu: 100m
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  ## Additional deployment annotations
  podAnnotations: { }
  ## The priority class to run the pod as
  priorityClassName:

  defaultConf: |
    server {
      listen 80;
      listen [::]:80;
      server_name _;
      root /srv/app/public;
  
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-Content-Type-Options "nosniff";
  
      index index.php;
  
      charset utf-8;
  
      location / {
          try_files $uri $uri/ /index.php?$query_string;
      }
  
      location = /favicon.ico { access_log off; log_not_found off; }
      location = /robots.txt  { access_log off; log_not_found off; }
  
      error_page 404 /index.php;
  
      location ~ \.php$ {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_read_timeout 300;
          include fastcgi_params;
          fastcgi_intercept_errors on;
      }
  
      location ~ /\.(?!well-known).* {
          deny all;
      }
    }

mariadb:
  image: mariadb
  imagePullPolicy: Always
  rootPassword: "password"
  # set the service account to be used, default if left empty
  serviceAccountName: ""
  # mount the service account token
  automountServiceAccountToken: false
  replicas: 1
  revisionHistoryLimit: 10
  # resources:
  #  requests:
  #    memory: 256Mi
  #    cpu: 100m
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  ## Additional deployment annotations
  podAnnotations: { }
  ## The priority class to run the pod as
  priorityClassName:
  persistence:
    storageClassName: "standard"
    size: 1Gi
    accessModes:
      - ReadWriteOnce
  defaultConf: |
    [mysqld]
    bind-address =

redis:
  image: redis
  imagePullPolicy: Always
  replicas: 1

  service:
    port: 6379
    type: ClusterIP

  persistence:
    storageClassName: "standard"
    size: 1Gi
    accessModes:
      - ReadWriteOnce
