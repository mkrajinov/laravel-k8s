apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "laravel.fullname" . }}-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "laravel.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ include "laravel.fullname" . }}
      app.kubernetes.io/name: {{ include "laravel.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/instance: {{ include "laravel.fullname" . }}
        app.kubernetes.io/name: {{ include "laravel.fullname" . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "laravel.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: app
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: fpm
              containerPort: 9000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- $dot := . }}
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "laravel.fullname" $dot }}-app-env
                  key: {{ $key }}
          {{- end }}
            - name: DB_CONNECTION
              value: {{ .Values.database.connection }}
            - name: DB_HOST
              value: {{ .Release.Name }}-postgresql
            - name: DB_PORT
              value: {{ .Values.postgresql.primary.service.ports.postgresql | quote }}
            - name: DB_DATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: DB_USERNAME
              value: {{ .Values.postgresql.auth.username }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "laravel.fullname" . }}-postgresql
                  key: password
            - name: REDIS_HOST
              value: {{ .Release.Name }}-redis-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "laravel.fullname" . }}-redis
                  key: redis-password
            - name: REDIS_PORT
              value: {{ .Values.redis.master.service.ports.redis | quote }}
        - name: nginx
          image: {{ .Values.nginx.image }}
          imagePullPolicy: {{ .Values.nginx.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /srv/app/public/
              name: public
            - mountPath: /etc/nginx/conf.d/default.conf
              name: nginx-conf
              subPath: default.conf
      initContainers:
        - name: init-public
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', "cp -r /srv/app/public/* /public/" ]
          volumeMounts:
            - mountPath: /public/
              name: public
      volumes:
        - name: public
          emptyDir: { }
        - name: nginx-conf
          configMap:
            name: {{ .Release.Name }}-nginx-conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
